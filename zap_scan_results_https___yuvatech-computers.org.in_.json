[
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "0",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "Location header URI length: 34 [https://yuvatech-computers.org.in/].\nPredicted response size: 334.\nResponse Body Length: 795.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10044",
        "cweid": "201",
        "confidence": "Medium",
        "sourceMessageId": 6,
        "wascid": "13",
        "description": "The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).",
        "messageId": "6",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A04": "https://owasp.org/Top10/A04_2021-Insecure_Design/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-201": "https://cwe.mitre.org/data/definitions/201.html"
        },
        "reference": "",
        "solution": "Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.",
        "alert": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "param": "",
        "attack": "",
        "name": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "risk": "Low",
        "id": "1",
        "alertRef": "10044-1"
    },
    {
        "sourceid": "3",
        "other": "Location header URI length: 44 [https://yuvatech-computers.org.in/robots.txt].\nPredicted response size: 344.\nResponse Body Length: 795.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10044",
        "cweid": "201",
        "confidence": "Medium",
        "sourceMessageId": 7,
        "wascid": "13",
        "description": "The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).",
        "messageId": "7",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A04": "https://owasp.org/Top10/A04_2021-Insecure_Design/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-201": "https://cwe.mitre.org/data/definitions/201.html"
        },
        "reference": "",
        "solution": "Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.",
        "alert": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "param": "",
        "attack": "",
        "name": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "risk": "Low",
        "id": "2",
        "alertRef": "10044-1"
    },
    {
        "sourceid": "3",
        "other": "Location header URI length: 45 [https://yuvatech-computers.org.in/sitemap.xml].\nPredicted response size: 345.\nResponse Body Length: 795.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10044",
        "cweid": "201",
        "confidence": "Medium",
        "sourceMessageId": 10,
        "wascid": "13",
        "description": "The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).",
        "messageId": "10",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A04": "https://owasp.org/Top10/A04_2021-Insecure_Design/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-201": "https://cwe.mitre.org/data/definitions/201.html"
        },
        "reference": "",
        "solution": "Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.",
        "alert": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "param": "",
        "attack": "",
        "name": "Big Redirect Detected (Potential Sensitive Information Leak)",
        "risk": "Low",
        "id": "3",
        "alertRef": "10044-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "sourceMessageId": 19,
        "wascid": "15",
        "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "4",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "sourceMessageId": 1,
        "wascid": "15",
        "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
        "messageId": "1",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "5",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "sourceMessageId": 12,
        "wascid": "15",
        "description": "The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "6",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 1,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "1",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "7",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 18,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "8",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 19,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "9",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "sourceMessageId": 12,
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "10",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "11",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 12,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "12",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "sourceMessageId": 19,
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "13",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 1,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "1",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "14",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 12,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "15",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "16",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "sourceMessageId": 19,
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "17",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 1,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "1",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "18",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 19,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "19",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 12,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "20",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "Modern Web Application",
        "param": "",
        "attack": "",
        "name": "Modern Web Application",
        "risk": "Informational",
        "id": "21",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 1,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "1",
        "inputVector": "",
        "url": "http://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "22",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 19,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "23",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "24",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 12,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "25",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 19,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "19",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/sitemap.xml",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "26",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 20,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "20",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css/main.24808849.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "27",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 18,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "18",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/robots.txt",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "28",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 12,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "12",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "29",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 20,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "20",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css/main.24808849.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "30",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 23,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "23",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/icon.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "31",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 23,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "23",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/icon.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "32",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 24,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "24",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css/custom.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "33",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 24,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "24",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css/custom.css",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "34",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The following pattern was used: \\bTODO\\b and was detected in the element starting with: \"(()=>{var e={4600:(e,t)=>{var n;!function(){\"use strict\";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.lengt\", see evidence field for the suspicious comment/snippet.",
        "method": "GET",
        "evidence": "todo",
        "pluginId": "10027",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "",
        "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
        "alert": "Information Disclosure - Suspicious Comments",
        "param": "",
        "attack": "",
        "name": "Information Disclosure - Suspicious Comments",
        "risk": "Informational",
        "id": "35",
        "alertRef": "10027"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 27,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "36",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1604231423, which evaluates to: 2020-11-01 17:20:23.",
        "method": "GET",
        "evidence": "1604231423",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "37",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1687547391, which evaluates to: 2023-06-24 00:39:51.",
        "method": "GET",
        "evidence": "1687547391",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "38",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1433087999, which evaluates to: 2015-05-31 21:29:59.",
        "method": "GET",
        "evidence": "1433087999",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "39",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1768516095, which evaluates to: 2026-01-16 03:58:15.",
        "method": "GET",
        "evidence": "1768516095",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "40",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "2005441023, which evaluates to: 2033-07-20 08:27:03.",
        "method": "GET",
        "evidence": "2005441023",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "42",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1724754687, which evaluates to: 2024-08-27 16:01:27.",
        "method": "GET",
        "evidence": "1724754687",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "44",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1804477439, which evaluates to: 2027-03-08 09:13:59.",
        "method": "GET",
        "evidence": "1804477439",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "45",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1714657791, which evaluates to: 2024-05-02 19:19:51.",
        "method": "GET",
        "evidence": "1714657791",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "46",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1784335871, which evaluates to: 2026-07-18 06:21:11.",
        "method": "GET",
        "evidence": "1784335871",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "47",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1887473919, which evaluates to: 2029-10-23 23:48:39.",
        "method": "GET",
        "evidence": "1887473919",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "48",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1473231341, which evaluates to: 2016-09-07 12:25:41.",
        "method": "GET",
        "evidence": "1473231341",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "50",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1770035416, which evaluates to: 2026-02-02 18:00:16.",
        "method": "GET",
        "evidence": "1770035416",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "51",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1958414417, which evaluates to: 2032-01-23 01:30:17.",
        "method": "GET",
        "evidence": "1958414417",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "52",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1990404162, which evaluates to: 2033-01-27 07:32:42.",
        "method": "GET",
        "evidence": "1990404162",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "53",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1804603682, which evaluates to: 2027-03-09 20:18:02.",
        "method": "GET",
        "evidence": "1804603682",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "54",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1502002290, which evaluates to: 2017-08-06 12:21:30.",
        "method": "GET",
        "evidence": "1502002290",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "55",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1444681467, which evaluates to: 2015-10-13 01:54:27.",
        "method": "GET",
        "evidence": "1444681467",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "56",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1735328473, which evaluates to: 2024-12-28 01:11:13.",
        "method": "GET",
        "evidence": "1735328473",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "57",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1926607734, which evaluates to: 2031-01-19 22:18:54.",
        "method": "GET",
        "evidence": "1926607734",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "58",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "2022574463, which evaluates to: 2034-02-03 15:44:23.",
        "method": "GET",
        "evidence": "2022574463",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "59",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1839030562, which evaluates to: 2028-04-11 07:19:22.",
        "method": "GET",
        "evidence": "1839030562",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "60",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1530992060, which evaluates to: 2018-07-08 01:04:20.",
        "method": "GET",
        "evidence": "1530992060",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "61",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1700485571, which evaluates to: 2023-11-20 18:36:11.",
        "method": "GET",
        "evidence": "1700485571",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "62",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1894986606, which evaluates to: 2030-01-18 22:40:06.",
        "method": "GET",
        "evidence": "1894986606",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "63",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "2054922799, which evaluates to: 2035-02-13 01:23:19.",
        "method": "GET",
        "evidence": "2054922799",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "64",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1873313359, which evaluates to: 2029-05-13 02:19:19.",
        "method": "GET",
        "evidence": "1873313359",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "65",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1560198380, which evaluates to: 2019-06-11 01:56:20.",
        "method": "GET",
        "evidence": "1560198380",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "66",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1732584193, which evaluates to: 2024-11-26 06:53:13.",
        "method": "GET",
        "evidence": "1732584193",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "67",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1732584194, which evaluates to: 2024-11-26 06:53:14.",
        "method": "GET",
        "evidence": "1732584194",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "68",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1540483477, which evaluates to: 2018-10-25 21:34:37.",
        "method": "GET",
        "evidence": "1540483477",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 27,
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server. - Unix",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "Timestamp Disclosure - Unix",
        "param": "",
        "attack": "",
        "name": "Timestamp Disclosure - Unix",
        "risk": "Low",
        "id": "69",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 27,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js/main.d3e9cc87.js",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "79",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "access-control-allow-origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 40,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "40",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "81",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "access-control-allow-origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 47,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "82",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 33,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "33",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "83",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "access-control-allow-origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 43,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "43",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "84",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "access-control-allow-origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 49,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "85",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 379",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 40,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "40",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "87",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 289",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 47,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "88",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081265",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 43,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "43",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "89",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974400",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 33,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "33",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "91",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The following pattern was used: \\bSELECT\\b and was detected in the element starting with: \"var Swiper=function(){\"use strict\";function e(e){return null!==e&&\"object\"==typeof e&&\"constructor\"in e&&e.constructor===Object}\", see evidence field for the suspicious comment/snippet.",
        "method": "GET",
        "evidence": "SELECT",
        "pluginId": "10027",
        "cweid": "200",
        "confidence": "Low",
        "sourceMessageId": 49,
        "wascid": "13",
        "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "",
        "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
        "alert": "Information Disclosure - Suspicious Comments",
        "param": "",
        "attack": "",
        "name": "Information Disclosure - Suspicious Comments",
        "risk": "Informational",
        "id": "94",
        "alertRef": "10027"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151029",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 49,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "95",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "access-control-allow-origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 51,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "102",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "sourceMessageId": 56,
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.",
        "messageId": "56",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "Cross-Domain Misconfiguration",
        "param": "",
        "attack": "",
        "name": "Cross-Domain Misconfiguration",
        "risk": "Medium",
        "id": "103",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213959",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 51,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "104",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392760",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 56,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "56",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "105",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/slick.295183786cd8a1389865.woff",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "151",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 61,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "61",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/logo.7e225f4c2383207864fa.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "152",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 68,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "68",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/web.9224ce01583be37e9cea.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "153",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 77,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "77",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/tallyprime.4c85d717ae0901b90eff.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "154",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 76,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "76",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/cprogramming.c9e83478825ed6020774.jpeg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "155",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 69,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "69",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Design.1dffc69497797f4fbabd.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "156",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/exce.997a5f3af434b1506bce.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "157",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 74,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "74",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/typing.cb56838c0de1a9b9d46f.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "158",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 79,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "79",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/data-structure.d096557879320cccb4b5.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "159",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 72,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "72",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/html.89c815e1a85fe0233dc0.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "160",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 78,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "78",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/cpp.dc9e1e882180e1a6e11c.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "161",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 61,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "61",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/logo.7e225f4c2383207864fa.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "162",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 73,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/exce.997a5f3af434b1506bce.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "163",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 76,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "76",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/cprogramming.c9e83478825ed6020774.jpeg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "164",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 79,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "79",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/data-structure.d096557879320cccb4b5.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "165",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 69,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "69",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Design.1dffc69497797f4fbabd.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "166",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 68,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "68",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/web.9224ce01583be37e9cea.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "167",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 63,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "63",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/slick.295183786cd8a1389865.woff",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "168",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 74,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "74",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/typing.cb56838c0de1a9b9d46f.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "169",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 77,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "77",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/tallyprime.4c85d717ae0901b90eff.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "170",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 72,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "72",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/html.89c815e1a85fe0233dc0.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "171",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 78,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "78",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/cpp.dc9e1e882180e1a6e11c.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "172",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 67,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "67",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Home.21931b52cd8369e04ea8.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "173",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 75,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "75",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Microsoft-Office.1fbaa6f05ab1558acc81.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "174",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 71,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/data.858e3c46949abc1cdb62.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "175",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 83,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "83",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/mysql.434e9dd3f6f599225f75.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "176",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 81,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "81",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about-1.065137e6153756304c90.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "177",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 84,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "84",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/coreldraw.d83c0f59ee3929386101.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "178",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 82,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "82",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about.b179bd4f034e7b631076.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "180",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 70,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "70",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Cad.ccfa9cf2899828958b03.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "181",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 75,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "75",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Microsoft-Office.1fbaa6f05ab1558acc81.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "182",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 67,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "67",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Home.21931b52cd8369e04ea8.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "183",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 71,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/data.858e3c46949abc1cdb62.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "184",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 81,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "81",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about-1.065137e6153756304c90.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "185",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 83,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "83",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/mysql.434e9dd3f6f599225f75.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "186",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 84,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "84",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/coreldraw.d83c0f59ee3929386101.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "187",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 82,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "82",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about.b179bd4f034e7b631076.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "189",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 85,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "85",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/tally.633e65f571b7d18ee786.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "190",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 70,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "70",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Cad.ccfa9cf2899828958b03.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "191",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 85,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "85",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/tally.633e65f571b7d18ee786.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "195",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 87,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "87",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about.e2a658a568beeaedbc7d.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "202",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 92,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "92",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/photoshop.bd287a70c91690b96446.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "203",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 89,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "89",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-1.05b093b7b1643a1ffc11.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "205",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 88,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "88",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-2.3088a5349df2a63415d7.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "208",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 92,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "92",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/photoshop.bd287a70c91690b96446.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "209",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/hemanshu.a02729cbe494b6a771dc.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "210",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 87,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "87",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/about.e2a658a568beeaedbc7d.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "211",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 108,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "108",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/harshal.9cd745ea290d22b70686.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "213",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 294",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 93,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "214",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 384",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 91,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "91",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "216",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 90,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "90",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-3.cef85ab345589bec36a8.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "217",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 111,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "111",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/hemanshu.a02729cbe494b6a771dc.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "219",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 89,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "89",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-1.05b093b7b1643a1ffc11.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "220",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 108,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "108",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/harshal.9cd745ea290d22b70686.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "221",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/pratham.aac979880b4b842160bf.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "222",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213963",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 96,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "96",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "224",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 88,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "88",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-2.3088a5349df2a63415d7.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "227",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 90,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "90",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/teacher-3.cef85ab345589bec36a8.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "228",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 102,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/programming.38fa260dae1c4286619b.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "229",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Contact-image.a3fe03ecdbfd3f5a6601.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "231",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Mahesh.2574adc9fe043a0eb8c1.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "232",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 113,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/pratham.aac979880b4b842160bf.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "236",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151034",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 95,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "95",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "238",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 112,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "112",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Mahesh.2574adc9fe043a0eb8c1.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "239",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 115,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "115",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Contact-image.a3fe03ecdbfd3f5a6601.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "245",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "sourceMessageId": 116,
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "116",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Sachin.384a50f5715b7427815e.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "248",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 295",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 123,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "123",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "249",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 102,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/programming.38fa260dae1c4286619b.png",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "250",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392765",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 125,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "251",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 385",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 127,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "127",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "252",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081271",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 124,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "124",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "255",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "sourceMessageId": 116,
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "116",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media/Sachin.384a50f5715b7427815e.jpg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "257",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974406",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 121,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "258",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151035",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 126,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "126",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "264",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213965",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 128,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "128",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "271",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392767",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 140,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "140",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "279",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 387",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 142,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "142",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "283",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 297",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 141,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "285",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213966",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 146,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "146",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "286",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081273",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 144,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "144",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "287",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974408",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 145,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "145",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "289",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151037",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 147,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "147",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "293",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 299",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 183,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "341",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 389",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 190,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "190",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "366",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151039",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 189,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "189",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "414",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 300",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 210,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "210",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "424",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 391",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 218,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "218",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "431",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213969",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 204,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "204",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "433",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081276",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 202,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "202",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "434",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392770",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 201,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "201",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "435",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974411",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 203,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "203",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "436",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213970",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 220,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "220",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "438",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151040",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 215,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "215",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "445",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 394",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 236,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "236",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "550",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392774",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 240,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "240",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "556",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213973",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 244,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "244",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "557",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081280",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 241,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "241",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "560",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 304",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 256,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "256",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "562",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974415",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 242,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "242",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "569",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 305",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 267,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "267",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "574",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 395",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 268,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "268",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "575",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213975",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 269,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "269",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "582",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151044",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 243,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "243",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "585",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151045",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 259,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "259",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "595",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 307",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 290,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "290",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "610",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392777",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 289,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "289",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "614",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213976",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 294,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "294",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "618",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 397",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 292,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "292",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "621",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974418",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 293,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "293",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "637",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081283",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 291,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "291",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "638",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151047",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 296,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "296",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "648",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151046",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 275,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "275",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "649",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 308",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 310,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "310",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "656",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 398",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 309,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "309",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "659",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213978",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 338,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "338",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "697",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151049",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 342,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "342",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "705",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 311",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 400,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "400",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "815",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 401",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 401,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "401",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "821",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974422",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 402,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "402",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "882",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392781",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 403,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "403",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "883",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213980",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 406,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "406",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "884",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081287",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 411,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "411",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "886",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151051",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 407,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "407",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "899",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 405",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 429,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "429",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "928",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392785",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 433,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "433",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "931",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 315",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 426,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "426",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "932",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081291",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 430,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "430",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "933",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213984",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 432,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "432",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "934",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974426",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 428,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "428",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "935",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151055",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 431,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "431",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "953",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 406",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 469,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "469",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1013",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 316",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 473,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "473",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1043",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213985",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 475,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "475",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1045",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 317",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 494,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "494",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1052",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 407",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 495,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "495",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1058",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213986",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 498,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "498",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1061",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151056",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 479,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "479",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1081",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151057",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 496,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "496",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1083",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 322",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 516,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "516",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1139",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 412",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 518,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "518",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1145",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 413",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 527,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "527",
        "inputVector": "",
        "url": "https://unpkg.com/swiper/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1149",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2081298",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 519,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "519",
        "inputVector": "",
        "url": "https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1150",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 1974433",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 520,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "520",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1154",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 392792",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 524,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "524",
        "inputVector": "",
        "url": "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1155",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151062",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 522,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "522",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1160",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 213992",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 529,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "529",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.css",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1168",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 151064",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "sourceMessageId": 539,
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
        "messageId": "539",
        "inputVector": "",
        "url": "https://unpkg.com/swiper@11.2.4/swiper-bundle.min.js",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "1171",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 1312,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1312",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/.bzr",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "1289",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 1314,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1314",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/._darcs",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "1290",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "HTTP/1.1 200 OK",
        "pluginId": "40035",
        "cweid": "538",
        "confidence": "Low",
        "sourceMessageId": 1316,
        "wascid": "13",
        "description": "A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.",
        "messageId": "1316",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/BitKeeper",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "POLICY_QA_FULL": "",
            "CWE-538": "https://cwe.mitre.org/data/definitions/538.html",
            "WSTG-v42-CONF-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html",
        "solution": "Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.",
        "alert": "Hidden File Found",
        "param": "",
        "attack": "",
        "name": "Hidden File Found",
        "risk": "Medium",
        "id": "1291",
        "alertRef": "40035"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1334,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1334",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1292",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1341,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1341",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1293",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1345,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1345",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1294",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1346,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1346",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1295",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1348,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1348",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1296",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1355,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1355",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1297",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1356,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1356",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1298",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1362,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1362",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1299",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1367,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1367",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1300",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1368,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1368",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1301",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1378,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1378",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1302",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1381,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1381",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1303",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1383,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1383",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1304",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1389,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1389",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1305",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1395,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1395",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1306",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1396,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1396",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1307",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1404,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1404",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1308",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1406,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1406",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1309",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1410,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1410",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1310",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1414,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1414",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1311",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1419,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1419",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1312",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1420,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1420",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1313",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1422,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1422",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1314",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1427,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1427",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1315",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1429,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1429",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1316",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1430,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1430",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1317",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1432,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1432",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1318",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1434,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1434",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1319",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1437,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1437",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1320",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1439,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1439",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1321",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1440,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1440",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1322",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1443,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1443",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1323",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1444,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1444",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1324",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1446,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1446",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1325",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1448,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1448",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1326",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1450,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1450",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1327",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1457,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1457",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1328",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1458,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1458",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1329",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1459,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1459",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1330",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1463,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1463",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1331",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1464,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1464",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1332",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1466,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1466",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1333",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1469,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1469",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1334",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1473,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1473",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1335",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1477,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1477",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1336",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1484,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1484",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1337",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1489,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1489",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1338",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1493,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1493",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1339",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1496,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1496",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1340",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1501,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1501",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1341",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1510,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1510",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1342",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1512,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1512",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/assets",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1343",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1515,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1515",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1344",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1516,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1516",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1345",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1521,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1521",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1346",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1524,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1524",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1347",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1527,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1527",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1348",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1529,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1529",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1349",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1534,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1534",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1350",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1537,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1537",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1351",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1541,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1541",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/js",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1352",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1551,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1551",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1353",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1562,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1562",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1354",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1567,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1567",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1355",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1575,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1575",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1356",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1580,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1580",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/css",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1357",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1593,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1593",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1358",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1598,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1598",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1359",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1603,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1603",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1360",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1611,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1611",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1361",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1633,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1633",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1362",
        "alertRef": "10104"
    },
    {
        "sourceid": "1",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10104",
        "cweid": "0",
        "confidence": "Medium",
        "sourceMessageId": 1643,
        "wascid": "0",
        "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.",
        "messageId": "1643",
        "inputVector": "",
        "url": "https://yuvatech-computers.org.in/static/media",
        "tags": {},
        "reference": "https://owasp.org/wstg",
        "solution": "",
        "alert": "User Agent Fuzzer",
        "param": "Header User-Agent",
        "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
        "name": "User Agent Fuzzer",
        "risk": "Informational",
        "id": "1363",
        "alertRef": "10104"
    }
]